name: "Update flake inputs"
on:
  workflow_dispatch:
  schedule:
   - cron: "0 2 * * 1"

jobs:
  update_flake:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Install nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            auto-optimise-store = true
            substituters = https://cache.nixos.org/ https://nix-community.cachix.org https://merrinx.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= merrinx.cachix.org-1:xxPuUGRPdYkH1eAUy1hLXt9w3GCfKTFVrkiWdlPEN9E= hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc=
      - name: Set up git
        run: |
          git config user.email "daniel@daniellaing.com"
          git config user.name "Daniel Laing"
      - name: Update flake
        run: nix flake update
      - name: Store flake.lock
        uses: actions/upload-artifact@v4
        with:
          name: flake_lock
          path: flake.lock

  build_flake:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    needs: [update_flake]
    strategy:
      fail-fast: false
      max-parallel: 3
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Install nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            auto-optimise-store = true
            substituters = https://cache.nixos.org/ https://nix-community.cachix.org https://merrinx.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= merrinx.cachix.org-1:xxPuUGRPdYkH1eAUy1hLXt9w3GCfKTFVrkiWdlPEN9E= hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc=
      - name: Restore flake.lock
        uses: actions/download-artifact@v4
        with:
          name: flake_lock
      - name: Build flake
        run: nix build

  check_flake:
    runs-on: ubuntu-latest
    needs: [update_flake]
    continue-on-error: true
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Install nix
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            auto-optimise-store = true
            substituters = https://cache.nixos.org/ https://nix-community.cachix.org https://merrinx.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= merrinx.cachix.org-1:xxPuUGRPdYkH1eAUy1hLXt9w3GCfKTFVrkiWdlPEN9E= hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc=
      - name: Restore flake.lock
        uses: actions/download-artifact@v4
        with:
          name: flake_lock
      - name: Check flake
        run: nix flake check --keep-going

  push_update:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [update_flake, build_flake, check_flake]
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Restore flake.lock
        uses: actions/download-artifact@v4
        with:
          name: flake_lock
      - name: Set up git
        run: |
          git config user.email "daniel@daniellaing.com"
          git config user.name "Daniel Laing"
      - name: Create and merge PR
        run: |
          git switch -c updates-${{ github.run_id }}
          git commit -am "flake.lock: Update"
          git push -u origin updates-${{ github.run_id }}
          PR=$(gh pr create \
            --assignee daniellaing \
            --base master \
            --body "Automatic flake update on $(date -I)" \
            --fill \
            --label bot \
            --title "Auto update $(date -I)")
          gh pr merge $PR --merge --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.TEST_TOKEN }}
